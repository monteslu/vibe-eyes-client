{"version":3,"file":"vibe-eyes.iife.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/lib/esm/index.js","../node_modules/engine.io-client/build/esm/globals.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js","../index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","/**\n * Vibe Eyes MCP Client\n * Simple client to send canvas screenshots and console logs to the MCP server\n * Must be explicitly initialized to avoid performance impact on games\n */\nimport { io } from 'socket.io-client';\n\n// Configuration with defaults\nconst DEFAULT_CONFIG = {\n  serverUrl: 'http://localhost:8869',  // Using socket.io now so we can use HTTP URL\n  captureDelay: 1000, // Minimum delay between captures in ms\n  maxLogs: 10,        // Maximum number of logs to store\n  maxErrors: 10,      // Maximum number of errors to store\n  autoConnect: true,  // Connect automatically by default\n  autoCapture: false, // Don't start capturing automatically unless specified\n  canvasId: null,     // Canvas element ID to capture (null = auto-detect)\n  debugWindow: {      // Configuration for the debug window\n    width: null,      // Width of the debug window (null = 75% of game window width)\n    height: null,     // Height of the debug window (null = 75% of game window height)\n    position: 'right' // Position relative to the game window ('right', 'left', 'top', 'bottom', or 'detached')\n  }\n};\n\nclass VibeEyesClient {\n  /**\n   * Deep merge two objects\n   * @private\n   * @param {Object} target - Target object to merge into\n   * @param {Object} source - Source object to merge from\n   * @returns {Object} Merged object\n   */\n  _deepMerge(target, source) {\n    // Handle case where source might be undefined\n    if (!source) return target;\n    \n    const output = { ...target };\n    \n    if (this._isObject(target) && this._isObject(source)) {\n      Object.keys(source).forEach(key => {\n        // Skip undefined properties\n        if (source[key] === undefined) return;\n        \n        if (this._isObject(source[key])) {\n          if (!(key in target)) {\n            output[key] = source[key];\n          } else {\n            output[key] = this._deepMerge(target[key], source[key]);\n          }\n        } else {\n          output[key] = source[key];\n        }\n      });\n    }\n    \n    return output;\n  }\n  \n  /**\n   * Check if value is an object\n   * @private\n   * @param {*} item - Item to check\n   * @returns {boolean} True if item is an object\n   */\n  _isObject(item) {\n    return (item && typeof item === 'object' && !Array.isArray(item));\n  }\n\n  constructor(config = {}) {\n    // Deep merge default config with user config\n    this.config = this._deepMerge(DEFAULT_CONFIG, config);\n    \n    // Initialize state\n    this.socket = null;\n    this.canvas = null;\n    this.console_logs = [];\n    this.console_errors = [];\n    this.unhandled_exception = null;\n    this.isConnected = false;\n    this.isCapturing = false;\n    this.captureTimeout = null;\n    this.initialized = false;\n    this.svgDisplayEnabled = false;\n    this.svgContainer = null;\n    this.svgWindow = null;\n    this.statsContainer = null;\n    this.lastSvgData = null;\n    this.lastResponseData = null;\n    this._windowMessageListenerSet = false;\n    this._windowWasEverOpened = false;\n    this._statusRefreshInterval = null;\n    \n    // Set up console proxies (always do this to collect logs)\n    this.setupConsoleProxy();\n    \n    // Set up global error handling\n    this.setupGlobalErrorHandling();\n    \n    // Check if we should auto-initialize\n    if (this.config.autoConnect) {\n      // Initialize on DOM ready\n      if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', () => this.initialize());\n      } else {\n        this.initialize();\n      }\n    }\n  }\n  \n  /**\n   * Initialize the client - must be called explicitly unless autoConnect is true\n   * @returns {VibeEyesClient} The client instance for chaining\n   */\n  initialize() {\n    if (this.initialized) {\n      return this;\n    }\n    \n    this.initialized = true;\n    \n    // Find canvas element\n    this.findCanvas();\n    \n    // Connect to server\n    this.connectToServer();\n    \n    // Start checking for connection and autostart capture\n    this.checkConnectionAndCapture();\n    \n    return this;\n  }\n  \n  /**\n   * Find the canvas element\n   */\n  findCanvas() {\n    // If a specific canvas ID is provided in config, try that first\n    if (this.config.canvasId) {\n      this.canvas = document.getElementById(this.config.canvasId);\n      if (this.canvas) {\n        return;\n      }\n      // Log warning if specified canvas not found\n      console.warn(`[Vibe-Eyes] Canvas with ID \"${this.config.canvasId}\" not found, falling back to auto-detection`);\n    }\n    \n    // Try common canvas IDs\n    this.canvas = document.getElementById('game-canvas') || document.getElementById('gameCanvas');\n    \n    // Fall back to query selector for any canvas\n    if (!this.canvas) {\n      const canvases = document.querySelectorAll('canvas');\n      if (canvases.length > 0) {\n        this.canvas = canvases[0];\n      }\n    }\n  }\n  \n  /**\n   * Connect to the vectorizer server\n   */\n  connectToServer() {\n    try {\n      // Try both websocket and polling transport for better compatibility\n      this.socket = io(this.config.serverUrl, {\n        transports: ['websocket', 'polling'],\n        reconnectionAttempts: 5,\n        reconnectionDelay: 1000\n      });\n      \n      // Log socket connection events for debugging\n      this.socket.on('connecting', () => {\n        // Silent connecting\n      });\n      \n      this.socket.on('connect', () => {\n        this.isConnected = true;\n        \n        // Start capture loop after connection\n        this.startCaptureLoop();\n      });\n      \n      this.socket.on('disconnect', () => {\n        this.isConnected = false;\n        \n        // Stop capture loop on disconnect\n        this.stopCaptureLoop();\n      });\n      \n      this.socket.on('error', (error) => {\n        console.error('[Vibe-Eyes] Socket error:', error);\n      });\n      \n      // Listen for SVG data from server\n      this.socket.on('svgData', (svgData) => {\n        this.lastSvgData = svgData;\n        \n        // Clear status refresh interval if it's running since we now have real data\n        if (this._statusRefreshInterval) {\n          clearInterval(this._statusRefreshInterval);\n          this._statusRefreshInterval = null;\n        }\n        \n        if (this.svgDisplayEnabled) {\n          // Create container if it doesn't exist\n          if (!this.svgContainer) {\n            this.enableSvgDisplay();\n          }\n          this.updateSvgDisplay();\n        }\n      });\n    } catch (error) {\n      console.error('[Vibe-Eyes] Failed to connect:', error);\n    }\n  }\n  \n  /**\n   * Set up console proxy to capture logs\n   */\n  setupConsoleProxy() {\n    // Store original console methods with proper binding\n    const originalLog = console.log.bind(console);\n    const originalError = console.error.bind(console);\n    \n    // Store reference to this for closure\n    const self = this;\n    \n    // Override console.log\n    console.log = function(...args) {\n      // Call original method\n      originalLog(...args);\n      \n      // Add to our log queue\n      self.console_logs.push({\n        timestamp: Date.now(),\n        data: args\n      });\n      \n      // Keep queue at configured length\n      while (self.console_logs.length > self.config.maxLogs) {\n        self.console_logs.shift();\n      }\n    };\n    \n    // Override console.error\n    console.error = function(...args) {\n      // Call original method\n      originalError(...args);\n      \n      // Add to our error queue\n      self.console_errors.push({\n        timestamp: Date.now(),\n        data: args\n      });\n      \n      // Keep queue at configured length\n      while (self.console_errors.length > self.config.maxErrors) {\n        self.console_errors.shift();\n      }\n    };\n  }\n  \n  /**\n   * Set up global error handling to catch unhandled exceptions\n   */\n  setupGlobalErrorHandling() {\n    const self = this;\n    \n    // Capture unhandled exceptions\n    window.addEventListener('error', function(event) {\n      const error = event.error || new Error(event.message);\n      const stack = error.stack || 'No stack trace available';\n      \n      // Store the error with timestamp\n      self.unhandled_exception = {\n        timestamp: Date.now(),\n        message: error.message || 'Unknown error',\n        stack: stack,\n        source: event.filename || 'Unknown source',\n        line: event.lineno,\n        column: event.colno,\n        type: error.name || 'Error'\n      };\n      \n      // Also log to console for visibility\n      console.error('[Vibe-Eyes] Unhandled exception captured:', self.unhandled_exception);\n    });\n    \n    // Capture unhandled promise rejections\n    window.addEventListener('unhandledrejection', function(event) {\n      const error = event.reason || new Error('Unhandled Promise rejection');\n      const stack = error.stack || 'No stack trace available';\n      \n      // Store the error with timestamp\n      self.unhandled_exception = {\n        timestamp: Date.now(),\n        message: error.message || 'Unhandled Promise rejection',\n        stack: stack,\n        type: 'UnhandledPromiseRejection',\n        reason: event.reason\n      };\n      \n      // Also log to console for visibility\n      console.error('[Vibe-Eyes] Unhandled promise rejection captured:', self.unhandled_exception);\n    });\n  }\n  \n  /**\n   * Start the capture loop\n   */\n  startCaptureLoop() {\n    if (this.isCapturing) return;\n    \n    this.isCapturing = true;\n    this.captureAndSend();\n  }\n  \n  /**\n   * Stop the capture loop\n   */\n  stopCaptureLoop() {\n    this.isCapturing = false;\n    \n    if (this.captureTimeout) {\n      clearTimeout(this.captureTimeout);\n      this.captureTimeout = null;\n    }\n  }\n  \n  /**\n   * Check connection and start capture when connected\n   * @private\n   */\n  checkConnectionAndCapture() {\n    if (this.isConnected) {\n      this.startCaptureLoop();\n    } else {\n      // Not connected yet, check again in 1 second\n      setTimeout(() => this.checkConnectionAndCapture(), 1000);\n    }\n  }\n  \n  /**\n   * Enable displaying SVG data from the server in the DOM\n   * @param {Object} options - Display options\n   * @param {HTMLElement|string} [options.container] - Container element or CSS selector for the SVG\n   * @returns {VibeEyesClient} The client instance for chaining\n   */\n  enableSvgDisplay(options = {}) {\n    // If a container is provided, use it\n    if (options.container) {\n      if (typeof options.container === 'string') {\n        this.svgContainer = document.querySelector(options.container);\n      } else {\n        this.svgContainer = options.container;\n      }\n    }\n    \n    // If no container or container not found, create one\n    if (!this.svgContainer) {\n      this.svgContainer = document.createElement('div');\n      document.body.appendChild(this.svgContainer);\n    }\n    \n    this.svgDisplayEnabled = true;\n    \n    // Always update the display - will show connection status if not connected\n    this.updateSvgDisplay();\n    \n    // If we're not connected, start a refresh interval to update connection status\n    if (!this.isConnected && !this._statusRefreshInterval) {\n      this._statusRefreshInterval = setInterval(() => {\n        if (this.svgDisplayEnabled && !this.isConnected) {\n          this.updateSvgDisplay();\n        } else if (this.isConnected && this._statusRefreshInterval) {\n          // Clear the interval once we're connected\n          clearInterval(this._statusRefreshInterval);\n          this._statusRefreshInterval = null;\n        }\n      }, 1000);\n    }\n    \n    return this;\n  }\n  \n  /**\n   * Disable SVG display\n   * @returns {VibeEyesClient} The client instance for chaining\n   */\n  disableSvgDisplay() {\n    this.svgDisplayEnabled = false;\n    \n    // Always close the window when disabling\n    if (this.svgWindow && !this.svgWindow.closed) {\n      try {\n        this.svgWindow.close();\n      } catch (e) {\n        console.warn('[Vibe-Eyes] Error closing debug window:', e.message);\n      }\n    }\n    \n    // Clear status refresh interval if it's running\n    if (this._statusRefreshInterval) {\n      clearInterval(this._statusRefreshInterval);\n      this._statusRefreshInterval = null;\n    }\n    \n    // Reset all references\n    this.svgWindow = null;\n    this.svgContainer = null;\n    this.statsContainer = null;\n    \n    return this;\n  }\n  \n  /**\n   * Toggle SVG display on/off\n   * @param {Object} [options] - Display options when enabling\n   * @returns {boolean} The new state (true = enabled, false = disabled)\n   */\n  toggleSvgDisplay(options) {\n    if (this.svgDisplayEnabled) {\n      this.disableSvgDisplay();\n      return false;\n    } else {\n      this.enableSvgDisplay(options);\n      return true;\n    }\n  }\n  \n  /**\n   * Convert SVG string to a data URL for use in an image tag\n   * @private\n   * @param {string} svgString - The SVG content as a string\n   * @returns {string} Data URL containing the SVG\n   */\n  _convertSvgToDataUrl(svgString) {\n    // Make sure SVG string is properly formatted\n    if (!svgString.trim().startsWith('<svg')) {\n      console.warn('[Vibe-Eyes] Invalid SVG content received');\n      return '';\n    }\n    \n    // Encode the SVG string as base64\n    const encoded = btoa(unescape(encodeURIComponent(svgString)));\n    \n    // Create a data URL\n    return `data:image/svg+xml;base64,${encoded}`;\n  }\n  \n  /**\n   * Generate status SVG with connection information\n   * @private\n   * @returns {string} SVG markup for connection status\n   */\n  _generateStatusSvg() {\n    const statusColor = this.isConnected ? '#4CAF50' : '#F44336';\n    const statusText = this.isConnected ? 'Connected' : 'Disconnected';\n    const serverUrl = this.config.serverUrl || 'not configured';\n    const timestamp = new Date().toLocaleTimeString();\n    const connectionMsg = this.isConnected ? 'Receiving data from server' : 'Waiting for connection...';\n    \n    // Create a clean, well-formed SVG for data URL conversion\n    return `<svg width=\"400\" height=\"300\" viewBox=\"0 0 400 300\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid meet\">\n<rect width=\"100%\" height=\"100%\" fill=\"#f8f8f8\" />\n<circle cx=\"200\" cy=\"100\" r=\"30\" fill=\"${statusColor}\" />\n<text x=\"200\" y=\"160\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"24\" font-weight=\"bold\">${statusText}</text>\n<text x=\"200\" y=\"200\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\">Server: ${serverUrl}</text>\n<text x=\"200\" y=\"230\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#666\">${connectionMsg}</text>\n<text x=\"200\" y=\"260\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"12\" fill=\"#888\">${timestamp} - Vibe Eyes Debug</text>\n</svg>`;\n  }\n\n  /**\n   * Update the SVG display with the latest data\n   * @private\n   */\n  updateSvgDisplay() {\n    try {\n      // Check if window exists and is still open\n      if (this.svgWindow && !this.svgWindow.closed) {\n        // Window exists and is open - try to access document to confirm it's working\n        try {\n          // This will throw if we can't access the document\n          const test = this.svgWindow.document.body;\n        } catch (e) {\n          // Can't access document, consider window closed\n          this.svgWindow = null;\n          this.svgContainer = null;\n          this.statsContainer = null;\n        }\n      }\n      \n      // Create a popup window if it doesn't exist or is closed\n      if (!this.svgWindow || this.svgWindow.closed) {\n        // Get debug window configuration (all properties are optional)\n        const debugConfig = this.config.debugWindow || {};\n        \n        // Get the game window position and dimensions\n        const gameRect = window.document.documentElement.getBoundingClientRect();\n        const gameLeft = window.screenLeft || window.screenX || 0;\n        const gameTop = window.screenTop || window.screenY || 0;\n        const gameWidth = window.outerWidth;\n        const gameHeight = window.outerHeight;\n        \n        // Use 75% of game window dimensions as default if width/height not specified\n        const defaultWidth = Math.round(gameWidth * 0.75);\n        const defaultHeight = Math.round(gameHeight * 0.75);\n        \n        // Use configuration values or calculated defaults\n        const width = typeof debugConfig.width === 'number' ? debugConfig.width : defaultWidth;\n        const height = typeof debugConfig.height === 'number' ? debugConfig.height : defaultHeight;\n        const position = debugConfig.position || 'right';\n        \n        // Calculate position relative to the game window\n        let left, top;\n        \n        // Calculate the position of the debug window relative to the game window\n        switch (position) {\n          case 'right':\n            left = gameLeft + gameWidth;\n            top = gameTop;\n            break;\n          case 'left':\n            left = Math.max(0, gameLeft - width);\n            top = gameTop;\n            break;\n          case 'top':\n            left = gameLeft;\n            top = Math.max(0, gameTop - height);\n            break;\n          case 'bottom':\n            left = gameLeft;\n            top = gameTop + gameHeight;\n            break;\n          case 'detached':\n          default:\n            // Center on screen\n            left = (window.screen.width - width) / 2;\n            top = (window.screen.height - height) / 2;\n            break;\n        }\n        \n        // Construct window features string\n        const features = `width=${width},height=${height},left=${left},top=${top},resizable=yes,scrollbars=yes`;\n        \n        // Open the window with the calculated position and size\n        this.svgWindow = window.open('', 'VibeEyesDebug', features);\n        \n        // Check if window was successfully created\n        if (!this.svgWindow) {\n          // Since we just tried to create a window and failed, it's probably blocked\n          // However, if we previously had a window that's now null, it was likely just closed by the user\n          // Only show warning if this is the first attempt to open a window\n          if (!this._windowWasEverOpened) {\n            console.warn('[Vibe-Eyes] Failed to open debug window. Pop-up might be blocked.');\n          }\n          this.svgDisplayEnabled = false;\n          return;\n        }\n        \n        // Record that we successfully opened a window at least once\n        this._windowWasEverOpened = true;\n        \n        // Set up basic HTML structure\n        this.svgWindow.document.write(`\n          <!DOCTYPE html>\n          <html>\n            <head>\n              <title>Vibe Eyes Debug View</title>\n              <style>\n                body { \n                  margin: 0; \n                  padding: 0; \n                  font-family: sans-serif;\n                  display: flex;\n                  flex-direction: column;\n                  height: 100vh;\n                  overflow: hidden;\n                }\n                #svgContainer { \n                  width: 100%; \n                  flex: 1;\n                  min-height: 300px;\n                  overflow: hidden; \n                  display: flex; \n                  justify-content: center;\n                  align-items: center;\n                  background-color: #f8f8f8;\n                }\n                #statsContainer { \n                  padding: 10px; \n                  overflow: auto; \n                  height: 300px; \n                  box-sizing: border-box;\n                  border-top: 1px solid #ddd;\n                }\n                h3 { \n                  margin-top: 5px;\n                  margin-bottom: 10px;\n                  font-size: 14px;\n                  color: #333;\n                }\n                pre { \n                  background: #f5f5f5; \n                  padding: 8px; \n                  border-radius: 4px; \n                  overflow: auto;\n                  font-size: 12px;\n                  margin: 0;\n                }\n              </style>\n            </head>\n            <body>\n              <div id=\"svgContainer\"></div>\n              <div id=\"statsContainer\">\n                <h3>Debug Stats</h3>\n                <pre id=\"statsContent\">Waiting for data...</pre>\n              </div>\n              \n              <script>\n                // Handle window close event\n                window.addEventListener('beforeunload', function() {\n                  if (window.opener && !window.opener.closed) {\n                    window.opener.postMessage('debugWindowClosed', '*');\n                  }\n                });\n              </script>\n            </body>\n          </html>\n        `);\n        this.svgWindow.document.close();\n        \n        // Set up message listener to detect window closure (if not already set up)\n        if (!this._windowMessageListenerSet) {\n          window.addEventListener('message', (event) => {\n            if (event.data === 'debugWindowClosed') {\n              // User manually closed the window\n              console.log('[Vibe-Eyes] Debug window closed by user');\n              this.svgWindow = null;\n              this.svgContainer = null;\n              this.statsContainer = null;\n              \n              // Keep the display enabled so it will reopen next time\n            }\n          });\n          this._windowMessageListenerSet = true;\n        }\n        \n        // Get references to containers in the popup\n        this.svgContainer = this.svgWindow.document.getElementById('svgContainer');\n        this.statsContainer = this.svgWindow.document.getElementById('statsContent');\n        \n        // Set up auto-refresh for connection status when not connected\n        if (!this.isConnected) {\n          // Create a refresh interval to update the status display\n          this._statusRefreshInterval = setInterval(() => {\n            if (this.svgContainer && this.svgWindow && !this.svgWindow.closed && !this.isConnected) {\n              // If we have server data, don't update the SVG\n              if (!this.lastSvgData) {\n                // Generate new SVG status and convert to data URL\n                const svgContent = this._generateStatusSvg();\n                const svgDataUrl = this._convertSvgToDataUrl(svgContent);\n                \n                // Update the image\n                this.svgContainer.innerHTML = `<img src=\"${svgDataUrl}\" alt=\"Debug Visualization\" style=\"width:100%; max-height:100%; object-fit:contain;\">`;\n              }\n              \n              // Update the stats too\n              if (this.statsContainer) {\n                const statusInfo = {\n                  connection: {\n                    status: this.isConnected ? \"Connected\" : \"Disconnected\",\n                    server: this.config.serverUrl,\n                    lastAttempt: new Date().toISOString()\n                  },\n                  clientInfo: {\n                    initialized: this.initialized,\n                    captureEnabled: this.isCapturing,\n                    consoleLogsCollected: this.console_logs.length,\n                    consoleErrorsCollected: this.console_errors.length,\n                    hasUnhandledException: !!this.unhandled_exception\n                  }\n                };\n                this.statsContainer.textContent = JSON.stringify(statusInfo, null, 2);\n              }\n            } else if (!this.svgWindow || this.svgWindow.closed) {\n              // Window was closed, clear the interval\n              clearInterval(this._statusRefreshInterval);\n            }\n          }, 1000); // Update every second\n        }\n      }\n      \n      // Determine what content to show: lastSvgData if available, otherwise status SVG\n      const svgContent = this.lastSvgData || this._generateStatusSvg();\n      \n      // Update the SVG content - only if we have valid references\n      if (this.svgContainer && this.svgWindow && !this.svgWindow.closed) {\n        try {\n          // For SVG data from the server (lastSvgData), insert it directly\n          if (this.lastSvgData && svgContent === this.lastSvgData) {\n            this.svgContainer.innerHTML = svgContent;\n            \n            // Make SVG fill the container width using only style properties\n            const svgElements = this.svgContainer.querySelectorAll('svg');\n            for (const svg of svgElements) {\n              svg.style.width = '100%';\n              svg.style.maxWidth = '100%';\n            }\n          } else {\n            // For our status SVG, convert to data URL for img tag\n            const svgDataUrl = this._convertSvgToDataUrl(svgContent);\n            \n            // Use an img tag for better scaling\n            this.svgContainer.innerHTML = `<img src=\"${svgDataUrl}\" alt=\"Debug Visualization\" style=\"width:100%; max-height:100%; object-fit:contain;\">`;\n          }\n        } catch (e) {\n          // Error accessing container - window likely closed\n          console.warn('[Vibe-Eyes] Error updating SVG display:', e.message);\n          this.svgWindow = null;\n          this.svgContainer = null;\n          this.statsContainer = null;\n          return;\n        }\n      }\n      \n      // Update stats based on what we have\n      if (this.statsContainer && this.svgWindow && !this.svgWindow.closed) {\n        try {\n          if (this.lastResponseData) {\n            // Remove svg from displayed stats to avoid duplication and clutter\n            const statsCopy = { ...this.lastResponseData };\n            if (statsCopy.svg) {\n              // Calculate and show SVG size in characters\n              const charCount = statsCopy.svg.length;\n              statsCopy.svg = `[SVG data shown above - ${charCount} characters]`;\n            }\n            \n            this.statsContainer.textContent = JSON.stringify(statsCopy, null, 2);\n          } else {\n            // If we don't have response data, show connection status\n            const statusInfo = {\n              connection: {\n                status: this.isConnected ? \"Connected\" : \"Disconnected\",\n                server: this.config.serverUrl,\n                lastAttempt: new Date().toISOString()\n              },\n              clientInfo: {\n                initialized: this.initialized,\n                captureEnabled: this.isCapturing,\n                consoleLogsCollected: this.console_logs.length,\n                consoleErrorsCollected: this.console_errors.length,\n                hasUnhandledException: !!this.unhandled_exception\n              }\n            };\n            this.statsContainer.textContent = JSON.stringify(statusInfo, null, 2);\n          }\n        } catch (e) {\n          // Error accessing stats container - window likely closed\n          console.warn('[Vibe-Eyes] Error updating stats display:', e.message);\n          this.svgWindow = null;\n          this.svgContainer = null;\n          this.statsContainer = null;\n        }\n      }\n    } catch (e) {\n      console.warn('[Vibe-Eyes] Error in SVG display:', e.message);\n      // Reset all references to be safe\n      this.svgWindow = null;\n      this.svgContainer = null;\n      this.statsContainer = null;\n    }\n  }\n  \n  /**\n   * Capture and send data to the server\n   */\n  captureAndSend() {\n    // Only proceed if connected and capturing is enabled\n    if (!this.isConnected || !this.isCapturing) {\n      return;\n    }\n    \n    // Make sure we have a canvas\n    if (!this.canvas) {\n      this.findCanvas();\n      \n      if (!this.canvas) {\n        console.warn('[Vectorizer] No canvas found, retrying in 1 second');\n        this.captureTimeout = setTimeout(() => this.captureAndSend(), 1000);\n        return;\n      }\n    }\n    \n    try {\n      // Get canvas data URL\n      const dataUrl = this.canvas.toDataURL('image/png');\n      \n      // Prepare message\n      const message = {\n        timestamp: Date.now(),\n        image: dataUrl,\n        console_logs: [...this.console_logs],\n        console_errors: [...this.console_errors],\n        unhandled_exception: this.unhandled_exception\n      };\n      \n      // Send to server and wait for acknowledgment\n      this.socket.emit('debugCapture', message, (response) => {\n        // Check if response contains SVG data\n        if (response) {\n          this.lastResponseData = response;\n          if (response.svg) {\n            this.lastSvgData = response.svg;\n            if (this.svgDisplayEnabled) {\n              this.updateSvgDisplay();\n            }\n          }\n        }\n        \n        // Schedule next capture after server acknowledges receipt\n        this.captureTimeout = setTimeout(\n          () => this.captureAndSend(),\n          this.config.captureDelay\n        );\n      });\n    } catch (error) {\n      console.error('[Vectorizer] Error capturing canvas:', error);\n      \n      // Retry after delay even if there was an error\n      this.captureTimeout = setTimeout(\n        () => this.captureAndSend(),\n        this.config.captureDelay\n      );\n    }\n  }\n}\n\n// Create global variable but don't auto-initialize\nwindow.VibeEyesClient = new VibeEyesClient();\n\n/**\n * Initialize the Vibe Eyes client with optional configuration\n * @param {Object} config - Configuration options\n * @returns {VibeEyesClient} The initialized client instance\n */\nexport function initializeVibeEyes(config = {}) {\n  // If already initialized, just update config\n  if (window.VibeEyesClient.initialized) {\n    window.VibeEyesClient.config = { ...window.VibeEyesClient.config, ...config };\n    return window.VibeEyesClient;\n  }\n  \n  // Create or reinitialize with new config\n  window.VibeEyesClient = new VibeEyesClient(config);\n  window.VibeEyesClient.initialize();\n  \n  return window.VibeEyesClient;\n}\n\n// Alias for backward compatibility\nexport const initializeVectorizer = initializeVibeEyes;\n\n// Export for module usage\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = { \n    VibeEyesClient,\n    initializeVibeEyes,\n    initializeVectorizer\n  };\n}\n\n// Make available on globalThis\nif (typeof globalThis !== 'undefined') {\n  globalThis.initializeVibeEyes = initializeVibeEyes;\n}\n\n// Export for ES modules\nexport { VibeEyesClient };"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","i","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","randomString","Date","now","Math","random","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","Polling","_polling","name","_poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","join","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","hasXHR2","newRequest","responseType","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","o","map","DEFAULT_TRANSPORTS","filter","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BINARY_EVENT","BINARY_ACK","EVENT","ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","freeze","connect","connect_error","disconnect","disconnecting","newListener","Socket","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","DEFAULT_CONFIG","serverUrl","captureDelay","maxLogs","maxErrors","autoCapture","canvasId","debugWindow","width","height","position","VibeEyesClient","_deepMerge","target","output","_isObject","item","config","canvas","console_logs","console_errors","unhandled_exception","isCapturing","captureTimeout","initialized","svgDisplayEnabled","svgContainer","svgWindow","statsContainer","lastSvgData","lastResponseData","_windowMessageListenerSet","_windowWasEverOpened","_statusRefreshInterval","setupConsoleProxy","setupGlobalErrorHandling","initialize","findCanvas","connectToServer","checkConnectionAndCapture","getElementById","console","warn","canvases","querySelectorAll","startCaptureLoop","stopCaptureLoop","svgData","clearInterval","enableSvgDisplay","updateSvgDisplay","originalLog","log","originalError","timestamp","stack","filename","line","lineno","column","colno","captureAndSend","container","querySelector","createElement","body","appendChild","setInterval","disableSvgDisplay","toggleSvgDisplay","_convertSvgToDataUrl","svgString","trim","startsWith","btoa","unescape","_generateStatusSvg","statusColor","statusText","toLocaleTimeString","debugConfig","gameLeft","documentElement","getBoundingClientRect","screenLeft","screenX","gameTop","screenTop","screenY","gameWidth","outerWidth","gameHeight","outerHeight","defaultWidth","round","defaultHeight","left","top","screen","features","svgContent","svgDataUrl","innerHTML","statusInfo","connection","server","lastAttempt","toISOString","clientInfo","captureEnabled","consoleLogsCollected","consoleErrorsCollected","hasUnhandledException","textContent","svgElements","svg","style","maxWidth","statsCopy","charCount","dataUrl","toDataURL","image","response","initializeVibeEyes","initializeVectorizer","module","exports"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}